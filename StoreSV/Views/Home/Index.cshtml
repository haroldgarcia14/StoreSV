@model IEnumerable<StoreSV.Models.Usuario>
@*@model StoreSV.Models.Usuario*@

@{
    ViewBag.Title = "Home";
}

<main>
    @*<section class="row" aria-labelledby="aspnetTitle">
            <h1 id="title">ASP.NET</h1>
            <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
            <p><a href="https://asp.net" class="btn btn-primary btn-md">Learn more &raquo;</a></p>
        </section>

        <div class="row">
            <section class="col-md-4" aria-labelledby="gettingStartedTitle">
                <h2 id="gettingStartedTitle">Getting started</h2>
                <p>
                    ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
                    enables a clean separation of concerns and gives you full control over markup
                    for enjoyable, agile development.
                </p>
                <p><a class="btn btn-outline-dark" href="https://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
            </section>
            <section class="col-md-4" aria-labelledby="librariesTitle">
                <h2 id="librariesTitle">Get more libraries</h2>
                <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
                <p><a class="btn btn-outline-dark" href="https://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
            </section>
            <section class="col-md-4" aria-labelledby="hostingTitle">
                <h2 id="hostingTitle">Web Hosting</h2>
                <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
                <p><a class="btn btn-outline-dark" href="https://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
            </section>
        </div>*@

    <!-- table Start -->
    <div class="container-fluid pt-4 px-4">

        <div class="col-12">
            <div class="bg-secondary rounded h-100 p-4">
                <h6 class="mb-4">Usuarios</h6>
                <!--boton que abrira el modal-->
                @*<button type="button" class="btn btn-success m-2" onclick="abrirModal()">Ingresar Empleados</button>*@
                <button type="button" class="btn btn-success m-2" data-toggle="modal" onclick="abrirModal('Create',0)" data-target="#FormModal">Ingresar Empleados</button>

                <div class="table-responsive">
                    <table id="tabla2" class="table">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Nombre</th>
                                <th scope="col">Apellido</th>
                                <th scope="col">Correo</th>
                                <th scope="col">Activo</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <!--cuerpo de la tabla-->
                            @*Bucle razor*@
                            @*condicion para validar si el modelo contiene datos o no*@
                            @if (!Model.Any())
                            {
                                @*No contiene datos*@
                                <tr><td colspan="3">No hay marcas para mostrar.</td></tr>
                            }
                            else
                            {
                                foreach (var item in Model)
                                {
                                    <tr id="row-@item.idUsuario">
                                        <td>
                                            @item.idUsuario
                                        </td>

                                        <td>
                                            @item.Nombres
                                        </td>

                                        <td>
                                            @item.Apellidos
                                        </td>

                                        <td>
                                            @item.Correo
                                        </td>

                                        <td>
                                            @if (item.Activo)
                                            {
                                                <span class="badge bg-success">Si</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">No</span>
                                            }
                                        </td>
                                        <td>
                                            <button type="button" class="btn btn-sm btn-editar" data-id="@item.idUsuario" data-toggle="modal" data-target="#FormModal" onclick="abrirModal('Edit',@item.idUsuario)"><i class="fas fa-pen"></i></button>
                                            <button type="button" class="btn btn-danger btn-sm ms-2 btn-eliminar" data-id="@item.idUsuario"><i class="fas fa-trash"></i></button>
                                        </td>
                                    </tr>
                                }
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <!-- Table End -->
    <!--Modal para crear-->
    <div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                @using (Html.BeginForm("CreateAndEdit", "Home", FormMethod.Post, new { role = "form", id = "userForm" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="modal-header color-cabecera text-white">
                        <h1 class="modal-title fs-5" id="exampleModalLabel">Usuarios</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>

                    <div class="modal-body">

                        @*mostrar resumen de errores*@
                        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                        <!--Id de usuario(oculto del modal)-->
                        @*<input id="txtid" value="0" type="hidden" />*@
                        @*@Html.EditorFor(model => model.First().idUsuario, new { id = "txtid" })*@
                        @*@Html.HiddenFor(model => model.First().idUsuario, new { htmlAttributes = new { @class = "form-control", id = "txtid", value = 0 } })*@

                        @*@Html.EditorFor(model => model.First().idUsuario, new { htmlAttributes = new { @class = "form-control", id = "txtid" } })*@

                        @Html.HiddenFor(model => model.FirstOrDefault().idUsuario, new { id = "txtid" })


                        <!--para grillas 2x2-->
                        <div class="row g-2">
                            <div class="col-sm-6">
                                @*<label for="txtnombres" class="form-label">Nombres</label>
                                    <input type="text" class="form-control" id="txtnombres" autocomplete="off">*@
                                @Html.LabelFor(model => model.FirstOrDefault().Nombres, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.FirstOrDefault().Nombres, new { htmlAttributes = new { @class = "form-control", id = "txtnombres", placeholder = "Sydney", required = "required" } })
                                @Html.ValidationMessageFor(model => model.FirstOrDefault().Nombres, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-sm-6">
                                @*<label for="txtapellidos" class="form-label">Apellidos</label>
                                    <input type="text" class="form-control" id="txtapellidos" autocomplete="off">*@
                                @Html.LabelFor(model => model.FirstOrDefault().Apellidos, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.FirstOrDefault().Apellidos, new { htmlAttributes = new { @class = "form-control", id = "txtapellidos", placeholder = "Sweeney" }, required = "required" })
                                @*@Html.ValidationMessageFor(model => model.First().Apellidos, "Tiene que ingresar un Apellido", new {@class = "text-danger"})*@
                            </div>

                            <div class="col-sm-6">
                                @*<label for="txtcorreo" class="form-label">Correo</label>
                                    <input type="email" class="form-control" id="txtcorreo" autocomplete="off">*@
                                @Html.LabelFor(model => model.FirstOrDefault().Correo, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.FirstOrDefault().Correo, new { htmlAttributes = new { @class = "form-control", id = "txtcorreo", placeholder = "sydneySweeney@gmail.com", required = "required" } })
                                @Html.ValidationMessageFor(model => model.First().Correo, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-sm-6">
                                @*<label for="txtpassword" class="form-label">Correo</label>
                                    <input type="email" class="form-control" id="txtpassword" autocomplete="off">*@
                                @Html.LabelFor(model => model.FirstOrDefault().Clave, htmlAttributes: new { @class = "form-label" })
                                @Html.PasswordFor(model => model.FirstOrDefault().Clave, new { @class = "form-control", id = "txtpassword", placeholder = "*******", required = "required" })
                                @Html.ValidationMessageFor(model => model.FirstOrDefault().Clave, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-sm-6">
                                @*<label for="cboactivo" class="form-label">Activo</label>*@
                                @Html.LabelFor(model => model.FirstOrDefault().Activo, htmlAttributes: new { @class = "form-label" })
                                @*<select id="cboactivo" class="form-select">
                                        <option value="1">Si</option>
                                        <option value="0">No</option>
                                    </select>*@
                                @Html.DropDownListFor(model => model.FirstOrDefault().Activo, new List<SelectListItem>
                                   {
                                      new SelectListItem {Value = "true", Text = "Sí"},
                                      new SelectListItem {Value = "false", Text = "No"}
                                   },
                                htmlAttributes: new { @class = "form-select", id = "cboactivo", placeholder = "Seleccione una opción", required = "required" })
                            </div>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary m-2" data-bs-dismiss="modal">Cerrar</button>
                        @*<button type="button" class="btn btn-info m-2" onclick="Guardar()">Guardar</button>*@
                        <button type="submit" class="btn btn-info m-2">Guardar</button>
                    </div>
                }
            </div>
        </div>
    </div>
</main>

<!--Codigo JS-->
<script src="~/Scripts/js/Index.js"></script>

@section scripts{
    <script>

                        //dandole funcionamiento al lapiz
            @*document.addEventListener('click', function (evento) {
                if (evento.target.classList.contains('btn-editar')) {
                    var usuarioId = evento.target.getAttribute('data-id');

                    //consumiendo el controlador
                    fetch('@Url.Action("GetUsuario","Home")?id=' + usuarioId, {
                        method: 'GET',
                    })
                        .then(respuesta => respuesta.json())
                        .then(data => {
                            if (data.success) {
                                //obteniendo datos
                                document.getElementById('txtid').value = data.idUsuario;
                                document.getElementById('txtnombres').value = data.Nombres;
                                document.getElementById('txtapellidos').value = data.Apellidos;
                                document.getElementById('txtcorreo').value = data.Correo;
                                document.getElementById('txtpassword').value = data.Clave;
                                document.getElementById('cboactivo').value = data.Activo ? 'true' : 'false'
                            } else {
                                alert(data.Message);
                            }
                        })
                        .catch(() => {
                            alert('Error al obtener los datos del usuario');
                        })
                }
            })*@

        @*function abrirModalEditar(id) {
            $("#form").attr('action', '@Url.Action("Edit","Home")');
            $.ajax({
                url: '@Url.Action("GetUsuario","Home")/' + id,
                type: 'GET',
                success: function (respuesta) {
                    if (respuesta.success) {
                        $('#txtid').val(respuesta.data.idUsuario);
                        $('#txtnombres').val(respuesta.data.Nombres);
                        $('#txtapellidos').val(respuesta.data.Apellidos);
                        $('#txtcorreo').val(respuesta.data.Correo);
                        //$('#txtpassword').val(respuesta.data.Clave);
                        $('#txtpassword').prop('disabled', true) //deshabilita el input password
                        $('#cboactivo').val(respuesta.data.Activo ? 'true' : 'false');

                        $("#FormModal").modal("show");
                    } else {
                        alert(respuesta.message);
                    }
                },
                error: function () {
                    alert('Error al obtener usuario');
                }
            })
        }*@

        //funcion para abrir modal

        function abrirModal(mode, userId = 0) {
            debugger
            var form = $("#userForm");
            @*var actionUrl = mode === 'Edit' ? '@Url.Action("Edit","Home")' : '@Url.Action("Create","Home")';*@

            //form.attr('action', actionUrl);

            //si es para editar
            if (mode === 'Edit') {
                //cargando datos
                $.ajax({
                    url: '@Url.Action("GetUsuario","Home")',
                    type: 'GET',
                    data: { id: userId },
                    success: function (respuesta) {
                        if (respuesta.success) {
                            console.log(respuesta);
                            $("#txtid").val(respuesta.data.idUsuario);
                            $('#txtnombres').val(respuesta.data.Nombres);
                            $('#txtapellidos').val(respuesta.data.Apellidos);
                            $('#txtcorreo').val(respuesta.data.Correo);
                            //$('#txtpassword').val(respuesta.data.Clave);
                            //$('#txtpassword').addClass('form-control');
                            $('#txtpassword').prop('disabled', true) //deshabilita el input password
                            //$('#txtpassword').hide();
                            $('#cboactivo').val(respuesta.data.Activo ? 'true' : 'false');

                            $("#FormModal").modal("show");
                            console.log(userId);
                        } else {
                            alert(respuesta.message);
                        }
                    },
                    error: function () {
                        alert('Error al obtener el usuario');
                    }
                });
            } else {
                  //limpiar formulario si es para crear nuevos usuarios
                  //se mostrara
                    $("#txtid").val(0);
                    $("#txtnombres").val("");
                    $("#txtapellidos").val("");
                    $("#txtcorreo").val("");
                    $("#txtpassword").val("");
                    $("#txtpassword").prop('disabled', false);
                    $("#cboactivo").val(1); //operador ternario

                //    //llamando el id
                $("#FormModal").modal("show");
                console.log(userId);
            }
        }

        //para eliminar registro(Ocultar)

        @*
        $(document).ready(function () {
            $('.btn-eliminar').on('click', function () {
                var userId = $(this).data('id');
                var btn = $(this); //referencia al boton
                if (confirm('Esta seguro de eliminar el usuario?')) {
                    $.ajax({
                        url: '@Url.Action("Delete","Home")',
                        type: 'POST',
                        data: { id: userId },
                        success: function (respuesta) {
                            console.log(respuesta);
                            debugger
                            if (respuesta.success) {
                                btn.closest('tr').fadeOut('slow', function () {
                                    $(this).remove(); //elimina la fila del DOM
                                })
                                //location.reload() //recargar la pagina
                            } else {
                                alert(`Error: ` + respuesta.error);
                            }
                        },
                        error: function () {
                            alert('El error al intentar eliminar el usuario');
                        }
                    })
                }
            })
        })
        *@

        $(document).ready(function () {
            $('.btn-eliminar').on('click', function () {
                var userId = $(this).data('id');
                var btn = $(this); //referencia al boton
                console.log(userId);
                //editando funcion de sweetalert2
                swal.fire({
                    title: "Eliminar usuario",
                    text: "¿Desea eliminar el usuario?",
                    icon: "warning",
                    background: "#000",
                    color: "#fff",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Sí",
                    cancelButtonText: "No"
                }).then((result) => {
                    if (result.isConfirmed) {
                        swal.fire({
                            title: "Eliminado!",
                            text: "El registro ha sido eliminado",
                            icon: "success",
                            background: "#000",
                            color: "#fff"
                        })
                        $.ajax({
                         url: '@Url.Action("Delete","Home")',
                         type: 'POST',
                         data: { id: userId },
                         success: function (respuesta) {
                             console.log(respuesta);

                             if (respuesta.success) {
                                 btn.closest('tr').fadeOut('slow', function () {
                                     $(this).remove(); //elimina la fila del DOM
                                 })

                             } else {
                                 alert(`Error: ` + respuesta.error);
                             }
                         },
                         error: function () {
                             alert('El error al intentar eliminar el usuario');
                         }
                        })
                    }
                })
            })
        })
    </script>
}